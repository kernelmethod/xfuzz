version: "3"
services:

  # API server and testing client. By default this image starts the interactive test
  # server when you start it up, but it also includes all of the tools needed to
  # run the tests.
  xfuzz:
    image: xfuzz/xfuzz:latest
    build:
      context: ..
      dockerfile: docker/xfuzz/Dockerfile
    hostname: api.xfuzz.lab
    environment:
      BASE_DOMAIN: "${BASE_DOMAIN:-xfuzz.lab}"
    networks:
      - xfuzztestnet
    restart: on-failure

  xfuzz-client:
    image: xfuzz/xfuzz:latest
    hostname: client.xfuzz.lab
    networks:
      - xfuzztestnet
    command: [ "true" ]
    restart: "no"

  # Proxy in front of the API server. The proxy uses tc to shape traffic and to
  # add some latency between the client and the testing server.
  proxy:
    image: xfuzz/xfuzz-proxy:latest
    hostname: proxy.xfuzz.lab
    build:
      context: ./proxy
    volumes:
      - caddy_data:/data:rw
      - caddy_config:/config:rw
    networks:
      outnet:
        priority: 1000
      xfuzztestnet:
        priority: 100
    ports:
      - "80:80"
      - "443:443"
    environment:
      TC_ENABLE: 1
    env_file:
      - proxy/settings.env
    restart: unless-stopped
    cap_add:
      - NET_ADMIN

  # Prometheus container to read in metrics from Caddy
  metrics:
    image: prom/prometheus:latest
    # Only run when the 'metrics' profile is enabled
    profiles:
      - metrics
    hostname: metrics.xfuzz.lab
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - xfuzztestnet
    depends_on:
      - proxy
    restart: on-failure

  # Grafana for visualizing metrics
  graphs:
    image: grafana/grafana-oss:latest
    # Only run when the 'metrics' profile is enabled
    profiles:
      - metrics
    hostname: graphs.xfuzz.lab
    networks:
      - xfuzztestnet
    volumes:
      - grafana_storage:/var/lib/grafana:rw
      - grafana_logs:/var/log/grafana:rw
      - ./secrets/gf_admin_password:/run/secrets/gf_admin_password:ro
      - ./metrics/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - ./metrics/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
      - ./metrics/dashboards/:/opt/dashboards/:ro
      - ./metrics/grafana_custom.ini:/usr/share/grafana/conf/custom.ini:ro
    environment:
      GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/gf_admin_password
      GF_LOG_MODE: "console file"
    restart: on-failure


networks:
  outnet:
  xfuzztestnet:


volumes:
  caddy_data:
  caddy_config:
  grafana_storage:
  grafana_logs:
